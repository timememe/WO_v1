// –í–∏–∑—É–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –î–£–ï–õ–û–ì
// –£–ø—Ä–∞–≤–ª—è–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—è–º–∏, —Ä–µ—á–µ–≤—ã–º–∏ –ø—É–∑—ã—Ä—è–º–∏ –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏

class VisualManager {
    constructor() {
        this.visualImage = document.getElementById('visualImage');
        this.visualBackground = document.getElementById('visualBackground');
        this.speechBubble = document.getElementById('speechBubble');
        this.statsOverlay = document.getElementById('statsOverlay');
        this.pointsOverlay = document.getElementById('pointsOverlay');
        this.assets = {
            idle: { image: 'images/main.png', background: 'images/anim/exp_bg.gif' },
            player: { image: 'images/anim/talk_blue.gif', background: 'images/anim/exp_bg.gif' },
            enemy: { image: 'images/anim/talk_red.gif', background: 'images/anim/exp_bg.gif' }
        };
        this.baseCharDelay = 55; // ~18 —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É
        this.readingPauseMs = 3000;
        this.typingTimeout = null;
        this.pauseTimeout = null;
        this.currentSpeechResolve = null;
        this.isDestroyed = false;
        this.currentState = 'idle'; // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.pendingVisualChange = null; // –û—á–µ—Ä–µ–¥—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤–∏–∑—É–∞–ª–∞
    }

    async setVisual(state, text = '') {
        // –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –∞–Ω–∏–º–∞—Ü–∏—é –∏ —Ä–µ—á—å
        this.cancelSpeech();

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.currentState = state;

        const assets = this.assets[state] ?? this.assets.idle;

        // –°–Ω–∞—á–∞–ª–∞ —Å–∫—Ä—ã–≤–∞–µ–º —Ä–µ—á–µ–≤–æ–π –ø—É–∑—ã—Ä—å
        this.speechBubble.classList.remove('visible');

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        if (assets) {
            // –§–æ—Ä—Å–∏—Ä—É–µ–º –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É GIF –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Ç–∞–π–º—Å—Ç–∞–º–ø–∞
            const timestamp = new Date().getTime();
            this.visualImage.src = `${assets.image}?t=${timestamp}`;
            this.visualBackground.src = `${assets.background}?t=${timestamp}`;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –æ–≤–µ—Ä–ª–µ–µ–≤
        if (state === 'idle') {
            this.statsOverlay.classList.add('visible');
            this.pointsOverlay.classList.add('visible');
        } else {
            this.statsOverlay.classList.remove('visible');
            this.pointsOverlay.classList.remove('visible');
        }

        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        if (text) {
            await this.delay(100);
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ—á–µ–≤–æ–π –ø—É–∑—ã—Ä—å
        return this.showSpeechBubble(text);
    }

    showSpeechBubble(text) {
        // –û—á–∏—â–∞–µ–º –∏ –ø—Ä—è—á–µ–º –ø—É–∑—ã—Ä—å
        this.speechBubble.textContent = '';
        this.speechBubble.classList.remove('visible');

        if (!text || text.trim() === '') {
            return Promise.resolve();
        }

        return new Promise(resolve => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω –ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä
            if (this.isDestroyed) {
                resolve();
                return;
            }

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º resolve –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–π –æ—Ç–º–µ–Ω—ã
            this.currentSpeechResolve = () => {
                resolve();
                this.currentSpeechResolve = null;
            };

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É–∑—ã—Ä—å
            this.speechBubble.classList.add('visible');

            let index = 0;
            const typeNext = () => {
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è –µ—Å–ª–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–æ
                if (this.isDestroyed) {
                    if (this.currentSpeechResolve) {
                        this.currentSpeechResolve();
                    }
                    return;
                }

                if (index < text.length) {
                    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Å–∏–º–≤–æ–ª
                    this.speechBubble.textContent += text[index];
                    const delay = this.getCharDelay(text[index]);
                    index++;
                    this.typingTimeout = setTimeout(typeNext, delay);
                } else {
                    // –ü–µ—á–∞—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –∂–¥—ë–º –ø–µ—Ä–µ–¥ —Å–∫—Ä—ã—Ç–∏–µ–º
                    this.typingTimeout = null;
                    this.pauseTimeout = setTimeout(() => {
                        this.pauseTimeout = null;
                        // –°–∫—Ä—ã–≤–∞–µ–º –ø—É–∑—ã—Ä—å
                        this.speechBubble.classList.remove('visible');
                        // –†–µ–∑–æ–ª–≤–∏–º –ø—Ä–æ–º–∏—Å –µ—Å–ª–∏ –≤—Å—ë –µ—â—ë –∞–∫—Ç–∏–≤–Ω–æ
                        if (this.currentSpeechResolve && !this.isDestroyed) {
                            this.currentSpeechResolve();
                        }
                    }, this.readingPauseMs);
                }
            };

            typeNext();
        });
    }

    getCharDelay(char) {
        if (!char) return this.baseCharDelay;
        if (char === ' ') return Math.max(20, Math.floor(this.baseCharDelay * 0.6));
        if (char === '\n') return this.baseCharDelay * 1.2;
        if (/[.!?]/.test(char)) return this.baseCharDelay + 220;
        if (/[,:;]/.test(char)) return this.baseCharDelay + 140;
        return this.baseCharDelay;
    }

    cancelSpeech() {
        if (this.typingTimeout) {
            clearTimeout(this.typingTimeout);
            this.typingTimeout = null;
        }
        if (this.pauseTimeout) {
            clearTimeout(this.pauseTimeout);
            this.pauseTimeout = null;
        }
        if (this.currentSpeechResolve) {
            this.currentSpeechResolve();
            this.currentSpeechResolve = null;
        }
        this.speechBubble.textContent = '';
        this.speechBubble.classList.remove('visible');
    }

    async showSpeech(text, who) {
        // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–µ—á–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –≤–∏–∑—É–∞–ª–æ–º
        return this.setVisual(who, text);
    }

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏
    delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
    destroy() {
        console.log('üßπ Destroying VisualManager');
        this.isDestroyed = true;
        this.cancelSpeech();

        // Clear any references
        this.visualImage = null;
        this.visualBackground = null;
        this.speechBubble = null;
        this.statsOverlay = null;
        this.pointsOverlay = null;
        this.currentSpeechResolve = null;
        this.pendingVisualChange = null;
    }
}

console.log('‚úÖ –ú–æ–¥—É–ª—å visual.js –∑–∞–≥—Ä—É–∂–µ–Ω');
